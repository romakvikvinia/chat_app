version: "3.9"
services:
  dev:
    build:
      context: ./
      target: development
      dockerfile: dockerfiles/api.dockerfile
    hostname: api_dev
    container_name: api_dev_service
    env_file:
      - api/.env
    volumes:
      - ./api:/app
      - /app/node_modules
    ports:
      - 8080:8080
    command: npm run start:dev
    restart: unless-stopped
    depends_on:
      - db
      # - redis

  db:
    image: mysql:8
    container_name: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    env_file:
      - api/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD:-rocketman}
      MYSQL_DATABASE: ${DATABASE_NAME:-chat-app}
    volumes:
      - mysqldata:/var/lib/mysql

    ports:
      - 3306:3306

  # caching
  # redis:
  #   container_name: redis_cache
  #   command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
  #   env_file:
  #     - api/.env
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - redis:/data

  prod:
    build:
      context: ./
      target: production
      dockerfile: dockerfiles/api.dockerfile
    hostname: api_prod
    container_name: api_prod_service
    env_file:
      - api/.env
    volumes:
      - ./api:/app
      - /app/node_modules
      - /app/dist
    ports:
      - 8080:8080
    command: npm run start:prod
    restart: on-failure
    depends_on:
      - db
    # - redis

  nginx:
    build:
      context: ./
      dockerfile: dockerfiles/nginx.dockerfile
    hostname: nginx_prod
    container_name: nginx_prod_service
    ports:
      - "80:80"
    depends_on:
      - prod
      # - dev

volumes:
  mysqldata:
  # redis:
